{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from \"prop-types\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nvar numberProp = PropTypes.oneOfType([PropTypes.string, PropTypes.number]);\nvar numberArrayProp = PropTypes.oneOfType([PropTypes.arrayOf(numberProp), numberProp]);\nvar touchableProps = {\n  disabled: PropTypes.bool,\n  onPress: PropTypes.func,\n  onPressIn: PropTypes.func,\n  onPressOut: PropTypes.func,\n  onLongPress: PropTypes.func,\n  delayPressIn: PropTypes.number,\n  delayPressOut: PropTypes.number,\n  delayLongPress: PropTypes.number\n};\nvar layoutProps = {\n  onLayout: PropTypes.func\n};\nvar responderProps = [].concat(_toConsumableArray(Object.keys(PanResponder.create({}).panHandlers)), [\"pointerEvents\"]).reduce(function (props, name) {\n  props[name] = PropTypes.func;\n  return props;\n}, {});\nvar fillProps = {\n  fill: PropTypes.string,\n  fillOpacity: numberProp,\n  fillRule: PropTypes.oneOf([\"evenodd\", \"nonzero\"])\n};\nvar clipProps = {\n  clipRule: PropTypes.oneOf([\"evenodd\", \"nonzero\"]),\n  clipPath: PropTypes.string\n};\nvar maskProps = {\n  mask: PropTypes.string\n};\nvar definationProps = {\n  name: PropTypes.string\n};\nvar strokeProps = {\n  stroke: PropTypes.string,\n  strokeWidth: numberProp,\n  strokeOpacity: numberProp,\n  strokeDasharray: numberArrayProp,\n  strokeDashoffset: numberProp,\n  strokeLinecap: PropTypes.oneOf([\"butt\", \"square\", \"round\"]),\n  strokeLinejoin: PropTypes.oneOf([\"miter\", \"bevel\", \"round\"]),\n  strokeMiterlimit: numberProp\n};\nvar transformProps = {\n  scale: numberProp,\n  scaleX: numberProp,\n  scaleY: numberProp,\n  rotate: numberProp,\n  rotation: numberProp,\n  translate: numberProp,\n  translateX: numberProp,\n  translateY: numberProp,\n  x: numberProp,\n  y: numberProp,\n  origin: numberProp,\n  originX: numberProp,\n  originY: numberProp,\n  skew: numberProp,\n  skewX: numberProp,\n  skewY: numberProp,\n  transform: PropTypes.oneOfType([PropTypes.object, PropTypes.string])\n};\n\nvar pathProps = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, fillProps), strokeProps), clipProps), maskProps), transformProps), responderProps), touchableProps), layoutProps), definationProps);\n\nvar fontStyle = PropTypes.oneOf([\"normal\", \"italic\", \"oblique\"]);\nvar fontVariant = PropTypes.oneOf([\"normal\", \"small-caps\"]);\nvar fontWeight = PropTypes.oneOf([\"normal\", \"bold\", \"bolder\", \"lighter\", \"100\", \"200\", \"300\", \"400\", \"500\", \"600\", \"700\", \"800\", \"900\"]);\nvar fontStretch = PropTypes.oneOf([\"normal\", \"wider\", \"narrower\", \"ultra-condensed\", \"extra-condensed\", \"condensed\", \"semi-condensed\", \"semi-expanded\", \"expanded\", \"extra-expanded\", \"ultra-expanded\"]);\nvar fontSize = numberProp;\nvar fontFamily = PropTypes.string;\nvar font = PropTypes.object;\nvar textAnchor = PropTypes.oneOf([\"start\", \"middle\", \"end\"]);\nvar textDecoration = PropTypes.oneOf([\"none\", \"underline\", \"overline\", \"line-through\", \"blink\"]);\nvar letterSpacing = numberProp;\nvar wordSpacing = numberProp;\nvar kerning = numberProp;\nvar fontVariantLigatures = PropTypes.oneOf([\"normal\", \"none\"]);\nvar fontProps = {\n  fontStyle: fontStyle,\n  fontVariant: fontVariant,\n  fontWeight: fontWeight,\n  fontStretch: fontStretch,\n  fontSize: fontSize,\n  fontFamily: fontFamily,\n  textAnchor: textAnchor,\n  textDecoration: textDecoration,\n  letterSpacing: letterSpacing,\n  wordSpacing: wordSpacing,\n  kerning: kerning,\n  fontVariantLigatures: fontVariantLigatures,\n  font: font\n};\nvar lengthAdjust = PropTypes.oneOf([\"spacing\", \"spacingAndGlyphs\"]);\nvar textLength = numberProp;\nvar verticalAlign = numberProp;\nvar alignmentBaseline = PropTypes.oneOf([\"baseline\", \"text-bottom\", \"alphabetic\", \"ideographic\", \"middle\", \"central\", \"mathematical\", \"text-top\", \"bottom\", \"center\", \"top\", \"text-before-edge\", \"text-after-edge\", \"before-edge\", \"after-edge\", \"hanging\"]);\nvar baselineShift = PropTypes.oneOfType([PropTypes.oneOf([\"sub\", \"super\", \"baseline\"]), PropTypes.arrayOf(numberProp), numberProp]);\nvar fontFeatureSettings = PropTypes.string;\n\nvar textSpecificProps = _objectSpread(_objectSpread(_objectSpread({}, pathProps), fontProps), {}, {\n  alignmentBaseline: alignmentBaseline,\n  baselineShift: baselineShift,\n  verticalAlign: verticalAlign,\n  lengthAdjust: lengthAdjust,\n  textLength: textLength,\n  fontData: PropTypes.object,\n  fontFeatureSettings: fontFeatureSettings\n});\n\nvar textProps = _objectSpread(_objectSpread({}, textSpecificProps), {}, {\n  dx: numberArrayProp,\n  dy: numberArrayProp\n});\n\nvar side = PropTypes.oneOf([\"left\", \"right\"]);\nvar startOffset = numberProp;\nvar method = PropTypes.oneOf([\"align\", \"stretch\"]);\nvar spacing = PropTypes.oneOf([\"auto\", \"exact\"]);\nvar midLine = PropTypes.oneOf([\"sharp\", \"smooth\"]);\n\nvar textPathProps = _objectSpread(_objectSpread({}, textSpecificProps), {}, {\n  href: PropTypes.string.isRequired,\n  startOffset: startOffset,\n  method: method,\n  spacing: spacing,\n  side: side,\n  midLine: midLine\n});\n\nexport { numberProp, fillProps, strokeProps, fontProps, textProps, textPathProps, clipProps, pathProps, responderProps, touchableProps };","map":{"version":3,"sources":["/Users/xpyx/Code/projects/solita-academy-2021/solitaFrontend/node_modules/react-native-svg/lib/props.js"],"names":["PropTypes","numberProp","oneOfType","string","number","numberArrayProp","arrayOf","touchableProps","disabled","bool","onPress","func","onPressIn","onPressOut","onLongPress","delayPressIn","delayPressOut","delayLongPress","layoutProps","onLayout","responderProps","Object","keys","PanResponder","create","panHandlers","reduce","props","name","fillProps","fill","fillOpacity","fillRule","oneOf","clipProps","clipRule","clipPath","maskProps","mask","definationProps","strokeProps","stroke","strokeWidth","strokeOpacity","strokeDasharray","strokeDashoffset","strokeLinecap","strokeLinejoin","strokeMiterlimit","transformProps","scale","scaleX","scaleY","rotate","rotation","translate","translateX","translateY","x","y","origin","originX","originY","skew","skewX","skewY","transform","object","pathProps","fontStyle","fontVariant","fontWeight","fontStretch","fontSize","fontFamily","font","textAnchor","textDecoration","letterSpacing","wordSpacing","kerning","fontVariantLigatures","fontProps","lengthAdjust","textLength","verticalAlign","alignmentBaseline","baselineShift","fontFeatureSettings","textSpecificProps","fontData","textProps","dx","dy","side","startOffset","method","spacing","midLine","textPathProps","href","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;;AAGA,IAAMC,UAAU,GAAGD,SAAS,CAACE,SAAV,CAAoB,CAACF,SAAS,CAACG,MAAX,EAAmBH,SAAS,CAACI,MAA7B,CAApB,CAAnB;AACA,IAAMC,eAAe,GAAGL,SAAS,CAACE,SAAV,CAAoB,CACxCF,SAAS,CAACM,OAAV,CAAkBL,UAAlB,CADwC,EAExCA,UAFwC,CAApB,CAAxB;AAKA,IAAMM,cAAc,GAAG;AACnBC,EAAAA,QAAQ,EAAER,SAAS,CAACS,IADD;AAEnBC,EAAAA,OAAO,EAAEV,SAAS,CAACW,IAFA;AAGnBC,EAAAA,SAAS,EAAEZ,SAAS,CAACW,IAHF;AAInBE,EAAAA,UAAU,EAAEb,SAAS,CAACW,IAJH;AAKnBG,EAAAA,WAAW,EAAEd,SAAS,CAACW,IALJ;AAMnBI,EAAAA,YAAY,EAAEf,SAAS,CAACI,MANL;AAOnBY,EAAAA,aAAa,EAAEhB,SAAS,CAACI,MAPN;AAQnBa,EAAAA,cAAc,EAAEjB,SAAS,CAACI;AARP,CAAvB;AAWA,IAAMc,WAAW,GAAG;AAChBC,EAAAA,QAAQ,EAAEnB,SAAS,CAACW;AADJ,CAApB;AAIA,IAAMS,cAAc,GAAG,6BAChBC,MAAM,CAACC,IAAP,CAAYC,YAAY,CAACC,MAAb,CAAoB,EAApB,EAAwBC,WAApC,CADgB,IAEnB,eAFmB,GAGrBC,MAHqB,CAGd,UAACC,KAAD,EAAQC,IAAR,EAAiB;AACtBD,EAAAA,KAAK,CAACC,IAAD,CAAL,GAAc5B,SAAS,CAACW,IAAxB;AACA,SAAOgB,KAAP;AACH,CANsB,EAMpB,EANoB,CAAvB;AAQA,IAAME,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAE9B,SAAS,CAACG,MADF;AAEd4B,EAAAA,WAAW,EAAE9B,UAFC;AAGd+B,EAAAA,QAAQ,EAAEhC,SAAS,CAACiC,KAAV,CAAgB,CAAC,SAAD,EAAY,SAAZ,CAAhB;AAHI,CAAlB;AAMA,IAAMC,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAEnC,SAAS,CAACiC,KAAV,CAAgB,CAAC,SAAD,EAAY,SAAZ,CAAhB,CADI;AAEdG,EAAAA,QAAQ,EAAEpC,SAAS,CAACG;AAFN,CAAlB;AAKA,IAAMkC,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAEtC,SAAS,CAACG;AADF,CAAlB;AAIA,IAAMoC,eAAe,GAAG;AACpBX,EAAAA,IAAI,EAAE5B,SAAS,CAACG;AADI,CAAxB;AAIA,IAAMqC,WAAW,GAAG;AAChBC,EAAAA,MAAM,EAAEzC,SAAS,CAACG,MADF;AAEhBuC,EAAAA,WAAW,EAAEzC,UAFG;AAGhB0C,EAAAA,aAAa,EAAE1C,UAHC;AAIhB2C,EAAAA,eAAe,EAAEvC,eAJD;AAKhBwC,EAAAA,gBAAgB,EAAE5C,UALF;AAMhB6C,EAAAA,aAAa,EAAE9C,SAAS,CAACiC,KAAV,CAAgB,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,CAAhB,CANC;AAOhBc,EAAAA,cAAc,EAAE/C,SAAS,CAACiC,KAAV,CAAgB,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CAAhB,CAPA;AAQhBe,EAAAA,gBAAgB,EAAE/C;AARF,CAApB;AAWA,IAAMgD,cAAc,GAAG;AACnBC,EAAAA,KAAK,EAAEjD,UADY;AAEnBkD,EAAAA,MAAM,EAAElD,UAFW;AAGnBmD,EAAAA,MAAM,EAAEnD,UAHW;AAInBoD,EAAAA,MAAM,EAAEpD,UAJW;AAKnBqD,EAAAA,QAAQ,EAAErD,UALS;AAMnBsD,EAAAA,SAAS,EAAEtD,UANQ;AAOnBuD,EAAAA,UAAU,EAAEvD,UAPO;AAQnBwD,EAAAA,UAAU,EAAExD,UARO;AASnByD,EAAAA,CAAC,EAAEzD,UATgB;AAUnB0D,EAAAA,CAAC,EAAE1D,UAVgB;AAWnB2D,EAAAA,MAAM,EAAE3D,UAXW;AAYnB4D,EAAAA,OAAO,EAAE5D,UAZU;AAanB6D,EAAAA,OAAO,EAAE7D,UAbU;AAcnB8D,EAAAA,IAAI,EAAE9D,UAda;AAenB+D,EAAAA,KAAK,EAAE/D,UAfY;AAgBnBgE,EAAAA,KAAK,EAAEhE,UAhBY;AAiBnBiE,EAAAA,SAAS,EAAElE,SAAS,CAACE,SAAV,CAAoB,CAACF,SAAS,CAACmE,MAAX,EAAmBnE,SAAS,CAACG,MAA7B,CAApB;AAjBQ,CAAvB;;AAoBA,IAAMiE,SAAS,qIACRvC,SADQ,GAERW,WAFQ,GAGRN,SAHQ,GAIRG,SAJQ,GAKRY,cALQ,GAMR7B,cANQ,GAORb,cAPQ,GAQRW,WARQ,GASRqB,eATQ,CAAf;;AAcA,IAAM8B,SAAS,GAAGrE,SAAS,CAACiC,KAAV,CAAgB,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,CAAhB,CAAlB;AAIA,IAAMqC,WAAW,GAAGtE,SAAS,CAACiC,KAAV,CAAgB,CAAC,QAAD,EAAW,YAAX,CAAhB,CAApB;AAIA,IAAMsC,UAAU,GAAGvE,SAAS,CAACiC,KAAV,CAAgB,CAC/B,QAD+B,EAE/B,MAF+B,EAG/B,QAH+B,EAI/B,SAJ+B,EAK/B,KAL+B,EAM/B,KAN+B,EAO/B,KAP+B,EAQ/B,KAR+B,EAS/B,KAT+B,EAU/B,KAV+B,EAW/B,KAX+B,EAY/B,KAZ+B,EAa/B,KAb+B,CAAhB,CAAnB;AAkBA,IAAMuC,WAAW,GAAGxE,SAAS,CAACiC,KAAV,CAAgB,CAChC,QADgC,EAEhC,OAFgC,EAGhC,UAHgC,EAIhC,iBAJgC,EAKhC,iBALgC,EAMhC,WANgC,EAOhC,gBAPgC,EAQhC,eARgC,EAShC,UATgC,EAUhC,gBAVgC,EAWhC,gBAXgC,CAAhB,CAApB;AAgBA,IAAMwC,QAAQ,GAAGxE,UAAjB;AAIA,IAAMyE,UAAU,GAAG1E,SAAS,CAACG,MAA7B;AAoBA,IAAMwE,IAAI,GAAG3E,SAAS,CAACmE,MAAvB;AAIA,IAAMS,UAAU,GAAG5E,SAAS,CAACiC,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,KAApB,CAAhB,CAAnB;AAIA,IAAM4C,cAAc,GAAG7E,SAAS,CAACiC,KAAV,CAAgB,CACnC,MADmC,EAEnC,WAFmC,EAGnC,UAHmC,EAInC,cAJmC,EAKnC,OALmC,CAAhB,CAAvB;AAUA,IAAM6C,aAAa,GAAG7E,UAAtB;AAIA,IAAM8E,WAAW,GAAG9E,UAApB;AAIA,IAAM+E,OAAO,GAAG/E,UAAhB;AAuBA,IAAMgF,oBAAoB,GAAGjF,SAAS,CAACiC,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,CAAhB,CAA7B;AAEA,IAAMiD,SAAS,GAAG;AACdb,EAAAA,SAAS,EAATA,SADc;AAEdC,EAAAA,WAAW,EAAXA,WAFc;AAGdC,EAAAA,UAAU,EAAVA,UAHc;AAIdC,EAAAA,WAAW,EAAXA,WAJc;AAKdC,EAAAA,QAAQ,EAARA,QALc;AAMdC,EAAAA,UAAU,EAAVA,UANc;AAOdE,EAAAA,UAAU,EAAVA,UAPc;AAQdC,EAAAA,cAAc,EAAdA,cARc;AASdC,EAAAA,aAAa,EAAbA,aATc;AAUdC,EAAAA,WAAW,EAAXA,WAVc;AAWdC,EAAAA,OAAO,EAAPA,OAXc;AAYdC,EAAAA,oBAAoB,EAApBA,oBAZc;AAadN,EAAAA,IAAI,EAAJA;AAbc,CAAlB;AAsBA,IAAMQ,YAAY,GAAGnF,SAAS,CAACiC,KAAV,CAAgB,CAAC,SAAD,EAAY,kBAAZ,CAAhB,CAArB;AAQA,IAAMmD,UAAU,GAAGnF,UAAnB;AAuBA,IAAMoF,aAAa,GAAGpF,UAAtB;AAoBA,IAAMqF,iBAAiB,GAAGtF,SAAS,CAACiC,KAAV,CAAgB,CACtC,UADsC,EAEtC,aAFsC,EAGtC,YAHsC,EAItC,aAJsC,EAKtC,QALsC,EAMtC,SANsC,EAOtC,cAPsC,EAQtC,UARsC,EAStC,QATsC,EAUtC,QAVsC,EAWtC,KAXsC,EAYtC,kBAZsC,EAatC,iBAbsC,EActC,aAdsC,EAetC,YAfsC,EAgBtC,SAhBsC,CAAhB,CAA1B;AAqCA,IAAMsD,aAAa,GAAGvF,SAAS,CAACE,SAAV,CAAoB,CACtCF,SAAS,CAACiC,KAAV,CAAgB,CAAC,KAAD,EAAQ,OAAR,EAAiB,UAAjB,CAAhB,CADsC,EAEtCjC,SAAS,CAACM,OAAV,CAAkBL,UAAlB,CAFsC,EAGtCA,UAHsC,CAApB,CAAtB;AAwGA,IAAMuF,mBAAmB,GAAGxF,SAAS,CAACG,MAAtC;;AAEA,IAAMsF,iBAAiB,iDAChBrB,SADgB,GAEhBc,SAFgB;AAGnBI,EAAAA,iBAAiB,EAAjBA,iBAHmB;AAInBC,EAAAA,aAAa,EAAbA,aAJmB;AAKnBF,EAAAA,aAAa,EAAbA,aALmB;AAMnBF,EAAAA,YAAY,EAAZA,YANmB;AAOnBC,EAAAA,UAAU,EAAVA,UAPmB;AAQnBM,EAAAA,QAAQ,EAAE1F,SAAS,CAACmE,MARD;AASnBqB,EAAAA,mBAAmB,EAAnBA;AATmB,EAAvB;;AAaA,IAAMG,SAAS,mCACRF,iBADQ;AAEXG,EAAAA,EAAE,EAAEvF,eAFO;AAGXwF,EAAAA,EAAE,EAAExF;AAHO,EAAf;;AAiBA,IAAMyF,IAAI,GAAG9F,SAAS,CAACiC,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB,CAAb;AAcA,IAAM8D,WAAW,GAAG9F,UAApB;AAcA,IAAM+F,MAAM,GAAGhG,SAAS,CAACiC,KAAV,CAAgB,CAAC,OAAD,EAAU,SAAV,CAAhB,CAAf;AAcA,IAAMgE,OAAO,GAAGjG,SAAS,CAACiC,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB,CAAhB;AAYA,IAAMiE,OAAO,GAAGlG,SAAS,CAACiC,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,CAAhB,CAAhB;;AAIA,IAAMkE,aAAa,mCACZV,iBADY;AAEfW,EAAAA,IAAI,EAAEpG,SAAS,CAACG,MAAV,CAAiBkG,UAFR;AAGfN,EAAAA,WAAW,EAAXA,WAHe;AAIfC,EAAAA,MAAM,EAANA,MAJe;AAKfC,EAAAA,OAAO,EAAPA,OALe;AAMfH,EAAAA,IAAI,EAAJA,IANe;AAOfI,EAAAA,OAAO,EAAPA;AAPe,EAAnB;;AAUA,SACIjG,UADJ,EAEI4B,SAFJ,EAGIW,WAHJ,EAII0C,SAJJ,EAKIS,SALJ,EAMIQ,aANJ,EAOIjE,SAPJ,EAQIkC,SARJ,EASIhD,cATJ,EAUIb,cAVJ","sourcesContent":["import PropTypes from \"prop-types\";\nimport { PanResponder } from \"react-native\";\n\nconst numberProp = PropTypes.oneOfType([PropTypes.string, PropTypes.number]);\nconst numberArrayProp = PropTypes.oneOfType([\n    PropTypes.arrayOf(numberProp),\n    numberProp\n]);\n\nconst touchableProps = {\n    disabled: PropTypes.bool,\n    onPress: PropTypes.func,\n    onPressIn: PropTypes.func,\n    onPressOut: PropTypes.func,\n    onLongPress: PropTypes.func,\n    delayPressIn: PropTypes.number,\n    delayPressOut: PropTypes.number,\n    delayLongPress: PropTypes.number\n};\n\nconst layoutProps = {\n    onLayout: PropTypes.func\n};\n\nconst responderProps = [\n    ...Object.keys(PanResponder.create({}).panHandlers),\n    \"pointerEvents\"\n].reduce((props, name) => {\n    props[name] = PropTypes.func;\n    return props;\n}, {});\n\nconst fillProps = {\n    fill: PropTypes.string,\n    fillOpacity: numberProp,\n    fillRule: PropTypes.oneOf([\"evenodd\", \"nonzero\"])\n};\n\nconst clipProps = {\n    clipRule: PropTypes.oneOf([\"evenodd\", \"nonzero\"]),\n    clipPath: PropTypes.string\n};\n\nconst maskProps = {\n    mask: PropTypes.string\n};\n\nconst definationProps = {\n    name: PropTypes.string\n};\n\nconst strokeProps = {\n    stroke: PropTypes.string,\n    strokeWidth: numberProp,\n    strokeOpacity: numberProp,\n    strokeDasharray: numberArrayProp,\n    strokeDashoffset: numberProp,\n    strokeLinecap: PropTypes.oneOf([\"butt\", \"square\", \"round\"]),\n    strokeLinejoin: PropTypes.oneOf([\"miter\", \"bevel\", \"round\"]),\n    strokeMiterlimit: numberProp\n};\n\nconst transformProps = {\n    scale: numberProp,\n    scaleX: numberProp,\n    scaleY: numberProp,\n    rotate: numberProp,\n    rotation: numberProp,\n    translate: numberProp,\n    translateX: numberProp,\n    translateY: numberProp,\n    x: numberProp,\n    y: numberProp,\n    origin: numberProp,\n    originX: numberProp,\n    originY: numberProp,\n    skew: numberProp,\n    skewX: numberProp,\n    skewY: numberProp,\n    transform: PropTypes.oneOfType([PropTypes.object, PropTypes.string])\n};\n\nconst pathProps = {\n    ...fillProps,\n    ...strokeProps,\n    ...clipProps,\n    ...maskProps,\n    ...transformProps,\n    ...responderProps,\n    ...touchableProps,\n    ...layoutProps,\n    ...definationProps\n};\n\n// normal | italic | oblique | inherit\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/font-style\nconst fontStyle = PropTypes.oneOf([\"normal\", \"italic\", \"oblique\"]);\n\n// normal | small-caps | inherit\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/font-variant\nconst fontVariant = PropTypes.oneOf([\"normal\", \"small-caps\"]);\n\n// normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/font-weight\nconst fontWeight = PropTypes.oneOf([\n    \"normal\",\n    \"bold\",\n    \"bolder\",\n    \"lighter\",\n    \"100\",\n    \"200\",\n    \"300\",\n    \"400\",\n    \"500\",\n    \"600\",\n    \"700\",\n    \"800\",\n    \"900\"\n]);\n\n// normal | wider | narrower | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded | inherit\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/font-stretch\nconst fontStretch = PropTypes.oneOf([\n    \"normal\",\n    \"wider\",\n    \"narrower\",\n    \"ultra-condensed\",\n    \"extra-condensed\",\n    \"condensed\",\n    \"semi-condensed\",\n    \"semi-expanded\",\n    \"expanded\",\n    \"extra-expanded\",\n    \"ultra-expanded\"\n]);\n\n// <absolute-size> | <relative-size> | <length> | <percentage> | inherit\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/font-size\nconst fontSize = numberProp;\n\n// [[<family-name> | <generic-family>],]* [<family-name> | <generic-family>] | inherit\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/font-family\nconst fontFamily = PropTypes.string;\n\n/*\n    font syntax [ [ <'font-style'> || <font-variant-css21> || <'font-weight'> || <'font-stretch'> ]? <'font-size'> [ / <'line-height'> ]? <'font-family'> ] | caption | icon | menu | message-box | small-caption | status-bar\n    where <font-variant-css21> = [ normal | small-caps ]\n\n    Shorthand property for setting ‘font-style’, ‘font-variant’,\n    ‘font-weight’, ‘font-size’, ‘line-height’ and ‘font-family’.\n\n    The ‘line-height’ property has no effect on text layout in SVG.\n\n    Note: for the purposes of processing the ‘font’ property in SVG,\n    'line-height' is assumed to be equal the value for property ‘font-size’\n\n    https://www.w3.org/TR/SVG11/text.html#FontProperty\n    https://developer.mozilla.org/en-US/docs/Web/CSS/font\n    https://drafts.csswg.org/css-fonts-3/#font-prop\n    https://www.w3.org/TR/CSS2/fonts.html#font-shorthand\n    https://www.w3.org/TR/CSS1/#font\n*/\nconst font = PropTypes.object;\n\n// start | middle | end | inherit\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/text-anchor\nconst textAnchor = PropTypes.oneOf([\"start\", \"middle\", \"end\"]);\n\n// none | underline | overline | line-through | blink | inherit\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/text-decoration\nconst textDecoration = PropTypes.oneOf([\n    \"none\",\n    \"underline\",\n    \"overline\",\n    \"line-through\",\n    \"blink\"\n]);\n\n// normal | <length> | inherit\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/letter-spacing\nconst letterSpacing = numberProp;\n\n// normal | <length> | inherit\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/word-spacing\nconst wordSpacing = numberProp;\n\n// auto | <length> | inherit\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/kerning\nconst kerning = numberProp;\n\n/*\nName:\tfont-variant-ligatures\nValue:\tnormal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ]\n    Initial:\tnormal\n    Applies to:\tall elements\n    Inherited:\tyes\n    Percentages:\tN/A\n    Media:\tvisual\n    Computed value:\tas specified\n    Animatable:\tno\n\n Ligatures and contextual forms are ways of combining glyphs to produce more harmonized forms.\n\n <common-lig-values>        = [ common-ligatures | no-common-ligatures ]\n <discretionary-lig-values> = [ discretionary-ligatures | no-discretionary-ligatures ]\n <historical-lig-values>    = [ historical-ligatures | no-historical-ligatures ]\n <contextual-alt-values>    = [ contextual | no-contextual ]\n\n https://developer.mozilla.org/en/docs/Web/CSS/font-variant-ligatures\n https://www.w3.org/TR/css-fonts-3/#font-variant-ligatures-prop\n*/\nconst fontVariantLigatures = PropTypes.oneOf([\"normal\", \"none\"]);\n\nconst fontProps = {\n    fontStyle,\n    fontVariant,\n    fontWeight,\n    fontStretch,\n    fontSize,\n    fontFamily,\n    textAnchor,\n    textDecoration,\n    letterSpacing,\n    wordSpacing,\n    kerning,\n    fontVariantLigatures,\n    font\n};\n\n/*\n Name\tValue\tInitial value\tAnimatable\n lengthAdjust\tspacing | spacingAndGlyphs\tspacing\tyes\n https://svgwg.org/svg2-draft/text.html#TextElementLengthAdjustAttribute\n https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/lengthAdjust\n */\nconst lengthAdjust = PropTypes.oneOf([\"spacing\", \"spacingAndGlyphs\"]);\n\n/*\n Name\tValue\tInitial value\tAnimatable\n textLength\t<length> | <percentage> | <number>\tSee below\tyes\n https://svgwg.org/svg2-draft/text.html#TextElementTextLengthAttribute\n https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/textLength\n*/\nconst textLength = numberProp;\n\n/*\n 2.2. Transverse Box Alignment: the vertical-align property\n\n Name:\tvertical-align\n Value:\t<‘baseline-shift’> || <‘alignment-baseline’>\n Initial:\tbaseline\n Applies to:\tinline-level boxes\n Inherited:\tno\n Percentages:\tN/A\n Media:\tvisual\n Computed value:\tas specified\n Canonical order:\tper grammar\n Animation type:\tdiscrete\n This shorthand property specifies how an inline-level box is aligned within the line.\n Values are the same as for its longhand properties, see below.\n\n Authors should use this property (vertical-align) instead of its longhands.\n\n https://www.w3.org/TR/css-inline-3/#transverse-alignment\n https://drafts.csswg.org/css-inline/#propdef-vertical-align\n */\nconst verticalAlign = numberProp;\n\n/*\n Name:\talignment-baseline\n\n 1.1 Value:  \tauto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical | inherit\n 2.0 Value:\tbaseline | text-bottom | alphabetic | ideographic | middle | central | mathematical | text-top | bottom | center | top\n Initial:\tbaseline\n Applies to:\tinline-level boxes, flex items, grid items, table cells\n Inherited:\tno\n Percentages:\tN/A\n Media:\tvisual\n Computed value:\tas specified\n Canonical order:\tper grammar\n Animation type:\tdiscrete\n https://drafts.csswg.org/css-inline/#propdef-alignment-baseline\n https://www.w3.org/TR/SVG11/text.html#AlignmentBaselineProperty\n https://svgwg.org/svg2-draft/text.html#AlignmentBaselineProperty\n https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/alignment-baseline\n*/\nconst alignmentBaseline = PropTypes.oneOf([\n    \"baseline\",\n    \"text-bottom\",\n    \"alphabetic\",\n    \"ideographic\",\n    \"middle\",\n    \"central\",\n    \"mathematical\",\n    \"text-top\",\n    \"bottom\",\n    \"center\",\n    \"top\",\n    \"text-before-edge\",\n    \"text-after-edge\",\n    \"before-edge\",\n    \"after-edge\",\n    \"hanging\"\n]);\n\n/*\n 2.2.2. Alignment Shift: baseline-shift longhand\n\n Name:\tbaseline-shift\n Value:\t<length> | <percentage> | sub | super\n Initial:\t0\n Applies to:\tinline-level boxes\n Inherited:\tno\n Percentages:\trefer to the used value of line-height\n Media:\tvisual\n Computed value:\tabsolute length, percentage, or keyword specified\n Animation type:\tdiscrete\n\n This property specifies by how much the box is shifted up from its alignment point.\n It does not apply when alignment-baseline is top or bottom.\n\n https://www.w3.org/TR/css-inline-3/#propdef-baseline-shift\n*/\nconst baselineShift = PropTypes.oneOfType([\n    PropTypes.oneOf([\"sub\", \"super\", \"baseline\"]),\n    PropTypes.arrayOf(numberProp),\n    numberProp\n]);\n\n/*\n 6.12. Low-level font feature settings control: the font-feature-settings property\n\n Name:\tfont-feature-settings\n Value:\tnormal | <feature-tag-value> #\n Initial:\tnormal\n Applies to:\tall elements\n Inherited:\tyes\n Percentages:\tN/A\n Media:\tvisual\n Computed value:\tas specified\n Animatable:\tno\n\n    This property provides low-level control over OpenType font features.\n\n    It is intended as a way of providing access to font features\n    that are not widely used but are needed for a particular use case.\n\n    Authors should generally use ‘font-variant’ and its related subproperties\n    whenever possible and only use this property for special cases where its use\n    is the only way of accessing a particular infrequently used font feature.\n\n    enable small caps and use second swash alternate\n    font-feature-settings: \"smcp\", \"swsh\" 2;\n    A value of ‘normal’ means that no change in glyph selection or positioning occurs due to this property.\n\n    Feature tag values have the following syntax:\n\n    <feature-tag-value> = <string> [ <integer> | on | off ]?\n    The <string> is a case-sensitive OpenType feature tag. As specified in the OpenType specification,\n    feature tags contain four ASCII characters.\n\n    Tag strings longer or shorter than four characters,\n    or containing characters outside the U+20–7E codepoint range are invalid.\n\n    Feature tags need only match a feature tag defined in the font,\n    so they are not limited to explicitly registered OpenType features.\n\n    Fonts defining custom feature tags should follow the tag name rules\n    defined in the OpenType specification [OPENTYPE-FEATURES].\n\n    Feature tags not present in the font are ignored;\n    a user agent must not attempt to synthesize fallback behavior based on these feature tags.\n\n    The one exception is that user agents may synthetically support the kern feature with fonts\n    that contain kerning data in the form of a ‘kern’ table but lack kern feature support in the ‘GPOS’ table.\n\n    In general, authors should use the ‘font-kerning’ property to explicitly enable or disable kerning\n    since this property always affects fonts with either type of kerning data.\n\n    If present, a value indicates an index used for glyph selection.\n\n    An <integer> value must be 0 or greater.\n\n    A value of 0 indicates that the feature is disabled.\n\n    For boolean features, a value of 1 enables the feature.\n\n    For non-boolean features, a value of 1 or greater enables the feature and indicates the feature selection index.\n\n    A value of ‘on’ is synonymous with 1 and ‘off’ is synonymous with 0.\n\n    If the value is omitted, a value of 1 is assumed.\n\n    font-feature-settings: \"dlig\" 1;       /* dlig=1 enable discretionary ligatures * /\n    font-feature-settings: \"smcp\" on;      /* smcp=1 enable small caps * /\n    font-feature-settings: 'c2sc';         /* c2sc=1 enable caps to small caps * /\n    font-feature-settings: \"liga\" off;     /* liga=0 no common ligatures * /\n    font-feature-settings: \"tnum\", 'hist'; /* tnum=1, hist=1 enable tabular numbers and historical forms * /\n    font-feature-settings: \"tnum\" \"hist\";  /* invalid, need a comma-delimited list * /\n    font-feature-settings: \"silly\" off;    /* invalid, tag too long * /\n    font-feature-settings: \"PKRN\";         /* PKRN=1 enable custom feature * /\n    font-feature-settings: dlig;           /* invalid, tag must be a string * /\n\n    When values greater than the range supported by the font are specified, the behavior is explicitly undefined.\n\n    For boolean features, in general these will enable the feature.\n\n    For non-boolean features, out of range values will in general be equivalent to a 0 value.\n\n    However, in both cases the exact behavior will depend upon the way the font is designed\n    (specifically, which type of lookup is used to define the feature).\n\n    Although specifically defined for OpenType feature tags,\n    feature tags for other modern font formats that support font features may be added in the future.\n\n    Where possible, features defined for other font formats\n    should attempt to follow the pattern of registered OpenType tags.\n\n    The Japanese text below will be rendered with half-width kana characters:\n\n    body { font-feature-settings: \"hwid\"; /* Half-width OpenType feature * / }\n\n    <p>毎日カレー食べてるのに、飽きない</p>\n\n    https://drafts.csswg.org/css-fonts-3/#propdef-font-feature-settings\n    https://developer.mozilla.org/en/docs/Web/CSS/font-feature-settings\n*/\nconst fontFeatureSettings = PropTypes.string;\n\nconst textSpecificProps = {\n    ...pathProps,\n    ...fontProps,\n    alignmentBaseline,\n    baselineShift,\n    verticalAlign,\n    lengthAdjust,\n    textLength,\n    fontData: PropTypes.object,\n    fontFeatureSettings\n};\n\n// https://svgwg.org/svg2-draft/text.html#TSpanAttributes\nconst textProps = {\n    ...textSpecificProps,\n    dx: numberArrayProp,\n    dy: numberArrayProp\n};\n\n/*\n Name\n side\n Value\n left | right\n initial value\n left\n Animatable\n yes\n https://svgwg.org/svg2-draft/text.html#TextPathElementSideAttribute\n*/\nconst side = PropTypes.oneOf([\"left\", \"right\"]);\n\n/*\n Name\n startOffset\n Value\n <length> | <percentage> | <number>\n initial value\n 0\n Animatable\n yes\n https://svgwg.org/svg2-draft/text.html#TextPathElementStartOffsetAttribute\n https://developer.mozilla.org/en/docs/Web/SVG/Element/textPath\n */\nconst startOffset = numberProp;\n\n/*\n Name\n method\n Value\n align | stretch\n initial value\n align\n Animatable\n yes\n https://svgwg.org/svg2-draft/text.html#TextPathElementMethodAttribute\n https://developer.mozilla.org/en/docs/Web/SVG/Element/textPath\n */\nconst method = PropTypes.oneOf([\"align\", \"stretch\"]);\n\n/*\n Name\n spacing\n Value\n auto | exact\n initial value\n exact\n Animatable\n yes\n https://svgwg.org/svg2-draft/text.html#TextPathElementSpacingAttribute\n https://developer.mozilla.org/en/docs/Web/SVG/Element/textPath\n */\nconst spacing = PropTypes.oneOf([\"auto\", \"exact\"]);\n\n/*\n Name\n mid-line\n Value\n sharp | smooth\n initial value\n smooth\n Animatable\n yes\n */\nconst midLine = PropTypes.oneOf([\"sharp\", \"smooth\"]);\n\n// https://svgwg.org/svg2-draft/text.html#TextPathAttributes\n// https://developer.mozilla.org/en/docs/Web/SVG/Element/textPath\nconst textPathProps = {\n    ...textSpecificProps,\n    href: PropTypes.string.isRequired,\n    startOffset,\n    method,\n    spacing,\n    side,\n    midLine\n};\n\nexport {\n    numberProp,\n    fillProps,\n    strokeProps,\n    fontProps,\n    textProps,\n    textPathProps,\n    clipProps,\n    pathProps,\n    responderProps,\n    touchableProps\n};\n"]},"metadata":{},"sourceType":"module"}
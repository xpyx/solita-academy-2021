{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/xpyx/Code/projects/solita-academy-2021/solitaFrontend/node_modules/react-native-svg/elements/Polyline.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Path from \"./Path\";\nimport { pathProps } from \"../lib/props\";\nimport extractPolyPoints from \"../lib/extract/extractPolyPoints\";\nimport Shape from \"./Shape\";\n\nvar _default = function (_Shape) {\n  _inherits(_default, _Shape);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.setNativeProps = function (props) {\n      var points = props.points;\n\n      if (points) {\n        if (Array.isArray(points)) {\n          points = points.join(\",\");\n        }\n\n        props.d = \"M\" + extractPolyPoints(points);\n      }\n\n      _this.root.setNativeProps(props);\n    };\n\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var props = this.props;\n      var points = props.points;\n\n      if (Array.isArray(points)) {\n        points = points.join(\",\");\n      }\n\n      return React.createElement(Path, _extends({\n        ref: function ref(ele) {\n          _this2.root = ele;\n        }\n      }, this.props, {\n        d: \"M\" + extractPolyPoints(points),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return _default;\n}(Shape);\n\n_default.displayName = \"Polyline\";\n_default.propTypes = _objectSpread(_objectSpread({}, pathProps), {}, {\n  points: PropTypes.oneOfType([PropTypes.string, PropTypes.array]).isRequired\n});\n_default.defaultProps = {\n  points: \"\"\n};\nexport { _default as default };","map":{"version":3,"sources":["/Users/xpyx/Code/projects/solita-academy-2021/solitaFrontend/node_modules/react-native-svg/elements/Polyline.js"],"names":["React","PropTypes","Path","pathProps","extractPolyPoints","Shape","setNativeProps","props","points","Array","isArray","join","d","root","ele","displayName","propTypes","oneOfType","string","array","isRequired","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP;AACA,SAASC,SAAT;AACA,OAAOC,iBAAP;AACA,OAAOC,KAAP;;;;;;;;;;;;;;;;;;UAcIC,c,GAAiB,UAAAC,KAAK,EAAI;AAAA,UAChBC,MADgB,GACLD,KADK,CAChBC,MADgB;;AAEtB,UAAIA,MAAJ,EAAY;AACR,YAAIC,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAJ,EAA2B;AACvBA,UAAAA,MAAM,GAAGA,MAAM,CAACG,IAAP,CAAY,GAAZ,CAAT;AACH;;AACDJ,QAAAA,KAAK,CAACK,CAAN,SAAcR,iBAAiB,CAACI,MAAD,CAA/B;AACH;;AACD,YAAKK,IAAL,CAAUP,cAAV,CAAyBC,KAAzB;AACH,K;;;;;;;6BAEQ;AAAA;;AAAA,UACGA,KADH,GACa,IADb,CACGA,KADH;AAAA,UAECC,MAFD,GAEYD,KAFZ,CAECC,MAFD;;AAIL,UAAIC,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAJ,EAA2B;AACvBA,QAAAA,MAAM,GAAGA,MAAM,CAACG,IAAP,CAAY,GAAZ,CAAT;AACH;;AAED,aACI,oBAAC,IAAD;AACI,QAAA,GAAG,EAAE,aAAAG,GAAG,EAAI;AACR,UAAA,MAAI,CAACD,IAAL,GAAYC,GAAZ;AACH;AAHL,SAIQ,KAAKP,KAJb;AAKI,QAAA,CAAC,QAAMH,iBAAiB,CAACI,MAAD,CAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AASH;;;;EAxCwBH,K;;SAClBU,W,GAAc,U;SACdC,S,mCACAb,S;AACHK,EAAAA,MAAM,EAAEP,SAAS,CAACgB,SAAV,CAAoB,CAAChB,SAAS,CAACiB,MAAX,EAAmBjB,SAAS,CAACkB,KAA7B,CAApB,EACHC;;SAGFC,Y,GAAe;AAClBb,EAAAA,MAAM,EAAE;AADU,C","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Path from \"./Path\";\nimport { pathProps } from \"../lib/props\";\nimport extractPolyPoints from \"../lib/extract/extractPolyPoints\";\nimport Shape from \"./Shape\";\n\nexport default class extends Shape {\n    static displayName = \"Polyline\";\n    static propTypes = {\n        ...pathProps,\n        points: PropTypes.oneOfType([PropTypes.string, PropTypes.array])\n            .isRequired,\n    };\n\n    static defaultProps = {\n        points: \"\",\n    };\n\n    setNativeProps = props => {\n        let { points } = props;\n        if (points) {\n            if (Array.isArray(points)) {\n                points = points.join(\",\");\n            }\n            props.d = `M${extractPolyPoints(points)}`;\n        }\n        this.root.setNativeProps(props);\n    };\n\n    render() {\n        const { props } = this;\n        let { points } = props;\n\n        if (Array.isArray(points)) {\n            points = points.join(\",\");\n        }\n\n        return (\n            <Path\n                ref={ele => {\n                    this.root = ele;\n                }}\n                {...this.props}\n                d={`M${extractPolyPoints(points)}`}\n            />\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
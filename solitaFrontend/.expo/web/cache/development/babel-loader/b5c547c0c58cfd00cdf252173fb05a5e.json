{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/xpyx/Code/projects/solita-academy-2021/solitaFrontend/node_modules/react-native-svg/elements/Text.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport extractText from \"../lib/extract/extractText\";\nimport { textProps } from \"../lib/props\";\nimport { TextAttributes } from \"../lib/attributes\";\nimport extractProps from \"../lib/extract/extractProps\";\nimport extractTransform from \"../lib/extract/extractTransform\";\nimport Shape from \"./Shape\";\nimport TSpan from \"./TSpan\";\n\nvar _default = function (_Shape) {\n  _inherits(_default, _Shape);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.setNativeProps = function (props) {\n      var matrix = !props.matrix && extractTransform(props);\n\n      if (matrix) {\n        props.matrix = matrix;\n      }\n\n      var text = _.pickBy(extractText(props, true, TSpan), function (p) {\n        return !_.isNil(p);\n      });\n\n      _this.root.setNativeProps(_objectSpread(_objectSpread({}, props), text));\n    };\n\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var props = this.props;\n      return React.createElement(RNSVGText, _extends({\n        ref: function ref(ele) {\n          _this2.root = ele;\n        }\n      }, extractProps(_objectSpread(_objectSpread({}, props), {}, {\n        x: null,\n        y: null\n      }), this), extractText(props, true, TSpan), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return _default;\n}(Shape);\n\n_default.displayName = \"Text\";\n_default.propTypes = textProps;\nexport { _default as default };\nvar RNSVGText = requireNativeComponent(\"RNSVGText\", null, {\n  nativeOnly: TextAttributes\n});","map":{"version":3,"sources":["/Users/xpyx/Code/projects/solita-academy-2021/solitaFrontend/node_modules/react-native-svg/elements/Text.js"],"names":["React","_","requireNativeComponent","extractText","textProps","TextAttributes","extractProps","extractTransform","Shape","TSpan","setNativeProps","props","matrix","text","pickBy","p","isNil","root","ele","x","y","displayName","propTypes","RNSVGText","nativeOnly"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;SACSC,sB;AACT,OAAOC,WAAP;AACA,SAASC,SAAT;AACA,SAASC,cAAT;AACA,OAAOC,YAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,KAAP;AACA,OAAOC,KAAP;;;;;;;;;;;;;;;;;;UAOIC,c,GAAiB,UAAAC,KAAK,EAAI;AACtB,UAAMC,MAAM,GAAG,CAACD,KAAK,CAACC,MAAP,IAAiBL,gBAAgB,CAACI,KAAD,CAAhD;;AACA,UAAIC,MAAJ,EAAY;AACRD,QAAAA,KAAK,CAACC,MAAN,GAAeA,MAAf;AACH;;AACD,UAAMC,IAAI,GAAGZ,CAAC,CAACa,MAAF,CAASX,WAAW,CAACQ,KAAD,EAAQ,IAAR,EAAcF,KAAd,CAApB,EAA0C,UAAAM,CAAC;AAAA,eAAI,CAACd,CAAC,CAACe,KAAF,CAAQD,CAAR,CAAL;AAAA,OAA3C,CAAb;;AACA,YAAKE,IAAL,CAAUP,cAAV,iCACOC,KADP,GAEOE,IAFP;AAIH,K;;;;;;;6BAEQ;AAAA;;AACL,UAAMF,KAAK,GAAG,KAAKA,KAAnB;AAEA,aACI,oBAAC,SAAD;AACI,QAAA,GAAG,EAAE,aAAAO,GAAG,EAAI;AACR,UAAA,MAAI,CAACD,IAAL,GAAYC,GAAZ;AACH;AAHL,SAIQZ,YAAY,iCAELK,KAFK;AAGRQ,QAAAA,CAAC,EAAE,IAHK;AAIRC,QAAAA,CAAC,EAAE;AAJK,UAMZ,IANY,CAJpB,EAYQjB,WAAW,CAACQ,KAAD,EAAQ,IAAR,EAAcF,KAAd,CAZnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAgBH;;;;EApCwBD,K;;SAClBa,W,GAAc,M;SAEdC,S,GAAYlB,S;;AAoCvB,IAAMmB,SAAS,GAAGrB,sBAAsB,CAAC,WAAD,EAAc,IAAd,EAAoB;AACxDsB,EAAAA,UAAU,EAAEnB;AAD4C,CAApB,CAAxC","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport { requireNativeComponent } from \"react-native\";\nimport extractText from \"../lib/extract/extractText\";\nimport { textProps } from \"../lib/props\";\nimport { TextAttributes } from \"../lib/attributes\";\nimport extractProps from \"../lib/extract/extractProps\";\nimport extractTransform from \"../lib/extract/extractTransform\";\nimport Shape from \"./Shape\";\nimport TSpan from \"./TSpan\";\n\nexport default class extends Shape {\n    static displayName = \"Text\";\n\n    static propTypes = textProps;\n\n    setNativeProps = props => {\n        const matrix = !props.matrix && extractTransform(props);\n        if (matrix) {\n            props.matrix = matrix;\n        }\n        const text = _.pickBy(extractText(props, true, TSpan), p => !_.isNil(p));\n        this.root.setNativeProps({\n            ...props,\n            ...text,\n        });\n    };\n\n    render() {\n        const props = this.props;\n\n        return (\n            <RNSVGText\n                ref={ele => {\n                    this.root = ele;\n                }}\n                {...extractProps(\n                    {\n                        ...props,\n                        x: null,\n                        y: null,\n                    },\n                    this,\n                )}\n                {...extractText(props, true, TSpan)}\n            />\n        );\n    }\n}\n\nconst RNSVGText = requireNativeComponent(\"RNSVGText\", null, {\n    nativeOnly: TextAttributes,\n});\n"]},"metadata":{},"sourceType":"module"}
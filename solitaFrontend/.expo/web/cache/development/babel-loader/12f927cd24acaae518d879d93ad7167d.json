{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/xpyx/Code/projects/solita-academy-2021/solitaFrontend/node_modules/react-native-svg/elements/Mask.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport { numberProp } from \"../lib/props\";\nimport units from \"../lib/units\";\nimport { MaskAttributes } from \"../lib/attributes\";\nimport extractTransform from \"../lib/extract/extractTransform\";\n\nvar _default = function (_Component) {\n  _inherits(_default, _Component);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.setNativeProps = function (props) {\n      _this.root.setNativeProps(props);\n    };\n\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var props = this.props;\n      var maskTransform = props.maskTransform,\n          transform = props.transform,\n          id = props.id,\n          x = props.x,\n          y = props.y,\n          width = props.width,\n          height = props.height,\n          maskUnits = props.maskUnits,\n          maskContentUnits = props.maskContentUnits,\n          children = props.children;\n      var extractedTransform;\n\n      if (maskTransform) {\n        extractedTransform = extractTransform(maskTransform);\n      } else if (transform) {\n        extractedTransform = extractTransform(transform);\n      } else {\n        extractedTransform = extractTransform(props);\n      }\n\n      return React.createElement(RNSVGMask, {\n        ref: function ref(ele) {\n          _this2.root = ele;\n        },\n        name: id,\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        matrix: extractedTransform,\n        maskTransform: extractedTransform,\n        maskUnits: maskUnits !== undefined ? units[maskUnits] : 0,\n        maskContentUnits: maskContentUnits !== undefined ? units[maskContentUnits] : 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, children);\n    }\n  }]);\n\n  return _default;\n}(Component);\n\n_default.displayName = \"Mask\";\n_default.propTypes = {\n  id: PropTypes.string.isRequired,\n  x: numberProp,\n  y: numberProp,\n  width: numberProp,\n  height: numberProp,\n  maskTransform: PropTypes.string,\n  maskUnits: PropTypes.oneOf([\"userSpaceOnUse\", \"objectBoundingBox\"]),\n  maskContentUnits: PropTypes.oneOf([\"userSpaceOnUse\", \"objectBoundingBox\"])\n};\nexport { _default as default };\nvar RNSVGMask = requireNativeComponent(\"RNSVGMask\", null, {\n  nativeOnly: MaskAttributes\n});","map":{"version":3,"sources":["/Users/xpyx/Code/projects/solita-academy-2021/solitaFrontend/node_modules/react-native-svg/elements/Mask.js"],"names":["React","Component","PropTypes","requireNativeComponent","numberProp","units","MaskAttributes","extractTransform","setNativeProps","props","root","maskTransform","transform","id","x","y","width","height","maskUnits","maskContentUnits","children","extractedTransform","ele","undefined","displayName","propTypes","string","isRequired","oneOf","RNSVGMask","nativeOnly"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;SACSC,sB;AACT,SAASC,UAAT;AACA,OAAOC,KAAP;AACA,SAASC,cAAT;AACA,OAAOC,gBAAP;;;;;;;;;;;;;;;;;;UAkBIC,c,GAAiB,UAAAC,KAAK,EAAI;AACtB,YAAKC,IAAL,CAAUF,cAAV,CAAyBC,KAAzB;AACH,K;;;;;;;6BAEQ;AAAA;;AAAA,UACGA,KADH,GACa,IADb,CACGA,KADH;AAAA,UAGDE,aAHC,GAaDF,KAbC,CAGDE,aAHC;AAAA,UAIDC,SAJC,GAaDH,KAbC,CAIDG,SAJC;AAAA,UAKDC,EALC,GAaDJ,KAbC,CAKDI,EALC;AAAA,UAMDC,CANC,GAaDL,KAbC,CAMDK,CANC;AAAA,UAODC,CAPC,GAaDN,KAbC,CAODM,CAPC;AAAA,UAQDC,KARC,GAaDP,KAbC,CAQDO,KARC;AAAA,UASDC,MATC,GAaDR,KAbC,CASDQ,MATC;AAAA,UAUDC,SAVC,GAaDT,KAbC,CAUDS,SAVC;AAAA,UAWDC,gBAXC,GAaDV,KAbC,CAWDU,gBAXC;AAAA,UAYDC,QAZC,GAaDX,KAbC,CAYDW,QAZC;AAeL,UAAIC,kBAAJ;;AACA,UAAIV,aAAJ,EAAmB;AACfU,QAAAA,kBAAkB,GAAGd,gBAAgB,CAACI,aAAD,CAArC;AACH,OAFD,MAEO,IAAIC,SAAJ,EAAe;AAClBS,QAAAA,kBAAkB,GAAGd,gBAAgB,CAACK,SAAD,CAArC;AACH,OAFM,MAEA;AACHS,QAAAA,kBAAkB,GAAGd,gBAAgB,CAACE,KAAD,CAArC;AACH;;AAED,aACI,oBAAC,SAAD;AACI,QAAA,GAAG,EAAE,aAAAa,GAAG,EAAI;AACR,UAAA,MAAI,CAACZ,IAAL,GAAYY,GAAZ;AACH,SAHL;AAII,QAAA,IAAI,EAAET,EAJV;AAKI,QAAA,CAAC,EAAEC,CALP;AAMI,QAAA,CAAC,EAAEC,CANP;AAOI,QAAA,KAAK,EAAEC,KAPX;AAQI,QAAA,MAAM,EAAEC,MARZ;AASI,QAAA,MAAM,EAAEI,kBATZ;AAUI,QAAA,aAAa,EAAEA,kBAVnB;AAWI,QAAA,SAAS,EAAEH,SAAS,KAAKK,SAAd,GAA0BlB,KAAK,CAACa,SAAD,CAA/B,GAA6C,CAX5D;AAYI,QAAA,gBAAgB,EACZC,gBAAgB,KAAKI,SAArB,GAAiClB,KAAK,CAACc,gBAAD,CAAtC,GAA2D,CAbnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAgBKC,QAhBL,CADJ;AAoBH;;;;EAhEwBnB,S;;SAClBuB,W,GAAc,M;SACdC,S,GAAY;AACfZ,EAAAA,EAAE,EAAEX,SAAS,CAACwB,MAAV,CAAiBC,UADN;AAEfb,EAAAA,CAAC,EAAEV,UAFY;AAGfW,EAAAA,CAAC,EAAEX,UAHY;AAIfY,EAAAA,KAAK,EAAEZ,UAJQ;AAKfa,EAAAA,MAAM,EAAEb,UALO;AAMfO,EAAAA,aAAa,EAAET,SAAS,CAACwB,MANV;AAOfR,EAAAA,SAAS,EAAEhB,SAAS,CAAC0B,KAAV,CAAgB,CAAC,gBAAD,EAAmB,mBAAnB,CAAhB,CAPI;AAQfT,EAAAA,gBAAgB,EAAEjB,SAAS,CAAC0B,KAAV,CAAgB,CAC9B,gBAD8B,EAE9B,mBAF8B,CAAhB;AARH,C;;AAiEvB,IAAMC,SAAS,GAAG1B,sBAAsB,CAAC,WAAD,EAAc,IAAd,EAAoB;AACxD2B,EAAAA,UAAU,EAAExB;AAD4C,CAApB,CAAxC","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { requireNativeComponent } from \"react-native\";\nimport { numberProp } from \"../lib/props\";\nimport units from \"../lib/units\";\nimport { MaskAttributes } from \"../lib/attributes\";\nimport extractTransform from \"../lib/extract/extractTransform\";\n\nexport default class extends Component {\n    static displayName = \"Mask\";\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        x: numberProp,\n        y: numberProp,\n        width: numberProp,\n        height: numberProp,\n        maskTransform: PropTypes.string,\n        maskUnits: PropTypes.oneOf([\"userSpaceOnUse\", \"objectBoundingBox\"]),\n        maskContentUnits: PropTypes.oneOf([\n            \"userSpaceOnUse\",\n            \"objectBoundingBox\",\n        ]),\n    };\n\n    setNativeProps = props => {\n        this.root.setNativeProps(props);\n    };\n\n    render() {\n        const { props } = this;\n        const {\n            maskTransform,\n            transform,\n            id,\n            x,\n            y,\n            width,\n            height,\n            maskUnits,\n            maskContentUnits,\n            children,\n        } = props;\n\n        let extractedTransform;\n        if (maskTransform) {\n            extractedTransform = extractTransform(maskTransform);\n        } else if (transform) {\n            extractedTransform = extractTransform(transform);\n        } else {\n            extractedTransform = extractTransform(props);\n        }\n\n        return (\n            <RNSVGMask\n                ref={ele => {\n                    this.root = ele;\n                }}\n                name={id}\n                x={x}\n                y={y}\n                width={width}\n                height={height}\n                matrix={extractedTransform}\n                maskTransform={extractedTransform}\n                maskUnits={maskUnits !== undefined ? units[maskUnits] : 0}\n                maskContentUnits={\n                    maskContentUnits !== undefined ? units[maskContentUnits] : 1\n                }\n            >\n                {children}\n            </RNSVGMask>\n        );\n    }\n}\n\nconst RNSVGMask = requireNativeComponent(\"RNSVGMask\", null, {\n    nativeOnly: MaskAttributes,\n});\n"]},"metadata":{},"sourceType":"module"}